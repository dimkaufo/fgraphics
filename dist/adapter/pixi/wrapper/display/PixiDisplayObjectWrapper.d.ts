/// <reference types="pixi.js" />
import { BaseClassWrapper, Rectangle, Point } from "fcore/dist/index";
import { IDisplayObjectWrapper } from "../../../abstract/wrapper/display/IDisplayObjectWrapper";
import { IDisplayObjectContainerWrapper } from "../../../abstract/wrapper/display/IDisplayObjectContainerWrapper";
export declare class PixiDisplayObjectWrapper extends BaseClassWrapper implements IDisplayObjectWrapper {
    isDisplayObjectWrapper: boolean;
    private _pixiDisplayObject;
    protected tempParent: IDisplayObjectContainerWrapper;
    private _isAddedToStage;
    constructor();
    protected commitData(): void;
    destruction(): void;
    protected removeListeners(): void;
    protected addPixiObjectListeners(pixiObject: PIXI.DisplayObject): void;
    protected removePixiObjectListeners(pixiObject: PIXI.DisplayObject): void;
    protected addPixiObjectInteractiveListeners(pixiObject: PIXI.DisplayObject): void;
    protected removePixiObjectInteractiveListeners(pixiObject: PIXI.DisplayObject): void;
    protected onAdded(parent: PIXI.Container): void;
    protected onRemoved(parent: PIXI.Container): void;
    updateAddedToStage(isAdded: boolean): void;
    protected onPixiClick(event: PIXI.interaction.InteractionEvent): void;
    protected onPixiTap(event: PIXI.interaction.InteractionEvent): void;
    protected onPixiMouseDown(event: PIXI.interaction.InteractionEvent): void;
    protected onPixiMouseUp(event: PIXI.interaction.InteractionEvent): void;
    protected onPixiMouseUpOutside(event: PIXI.interaction.InteractionEvent): void;
    protected onPixiMouseOver(event: PIXI.interaction.InteractionEvent): void;
    protected onPixiMouseOut(event: PIXI.interaction.InteractionEvent): void;
    protected pixiDisplayObject: PIXI.DisplayObject;
    cache: boolean;
    alpha: number;
    x: number;
    y: number;
    scaleX: number;
    scaleY: number;
    visible: boolean;
    interactive: boolean;
    buttonMode: boolean;
    cursor: string;
    readonly parent: IDisplayObjectContainerWrapper;
    getGlobalBounds(): Rectangle;
    getLocalBounds(): Rectangle;
    toGlobal(position: Point): Point;
    toLocal(position: Point): Point;
    width: number;
    height: number;
    checkIfParamIsParent(paramName: string): boolean;
    isAddedToStage: boolean;
}
